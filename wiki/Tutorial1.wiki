#summary Basic code for setting up the engine
#labels Featured,Phase-Deploy

Game.CS:

{{{

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using F2D.Core;
using F2D.Graphics;
using F2D.Math;
using BHS.GameLogic;
using BHS;
using BHS.GameLogic.Menu;

namespace BHS.Core
{
    public class Game : Microsoft.Xna.Framework.Game
    {
        GraphicsDeviceManager graphics;

        //Director manages the rendering (spatial partitioning) and manages the screens 
        //(transitioning, removing, adding)
        Director director;

        public Game()
        {
            graphics = new GraphicsDeviceManager(this);
        }

        protected override void Initialize()
        {
            director = new Director(this, graphics);
            Grid.Initialize(200, new Vector2(1600, 1200), 1);

            Camera.Initialize(new Vector2(0, 0), new Vector2(1600, 1200));

            director.Initialize();

            Components.Add(director);

            director.AddScreen(new Background());
            dicrector.AddScreen(new MainMenuScreen());

            this.IsFixedTimeStep = false;

            base.Initialize();
        }

        protected override void LoadContent()
        {
            //it is recommended to use the LoadContent found in each screen but this one in 
            //game.cs can still be used
        }

        protected override void UnloadContent()
        {
            Content.Unload();

            base.UnloadContent();

        }

        protected override void Update(GameTime gameTime)
        {
            Grid.ParentCell = new Vector2Int(1,1);

            director.Update(gameTime);
            base.Update(gameTime);

        }

        protected override void Draw(GameTime gameTime)
        {
            //Sets up the two viewports. The first one is the column boxing
            //(the two black columns on the sides to compensate for widescreen monitors using 4:3 resolution)
            //The second viewport is the one in which everything is rendered
            Director.graphicsDevice.Viewport = Director.ClearViewport;
            Director.graphicsDevice.Clear(Color.Black);

            Director.graphicsDevice.Viewport = Director.SceneViewport;            
            Director.graphicsDevice.Clear(Color.CornflowerBlue);

            base.Draw(gameTime);
        }
    }
}

}}}